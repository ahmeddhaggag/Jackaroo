package controller;

import engine.Game;
import engine.board.Cell;
import javafx.fxml.FXML;
import javafx.scene.control.Label;
import javafx.scene.layout.Pane;
import view.CellView;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class MainGameController {

	@FXML private Label nameLabel1;
	@FXML private Label nameLabel2;
	@FXML private Label nameLabel3;
	@FXML private Label nameLabel4;

	@FXML private Pane boardPane;

	// 10 manually defined cell panes (from FXML)
	@FXML private Pane cellPane_0;
	@FXML private Pane cellPane_1;
	@FXML private Pane cellPane_2;
	@FXML private Pane cellPane_3;
	@FXML private Pane cellPane_4;
	@FXML private Pane cellPane_5;
	@FXML private Pane cellPane_6;
	@FXML private Pane cellPane_7;
	@FXML private Pane cellPane_8;
	@FXML private Pane cellPane_9;

	private Game game;

	public void startGame(String username) throws IOException {
		game = new Game(username);

		displayName(nameLabel1, username);
		displayName(nameLabel2, "CPU1");
		displayName(nameLabel3, "CPU2");
		displayName(nameLabel4, "CPU3");

		initializeBoard();
	}

	private void displayName(Label label, String name) {
		label.setText(name);
	}

	@FXML private Pane boardTrackPane;

	private List<Pane> trackPanes = new ArrayList<>();

	@FXML
	public void initialize() {
		// Dynamically get all 100 panes by ID
		for (int i = 0; i < 100; i++) {
			Pane pane = (Pane) boardTrackPane.lookup("#cellPane_" + i);
			if (pane != null) {
				trackPanes.add(pane);
			} else {
				System.err.println("Missing: cellPane_" + i);
			}
		}
	}

	public void initializeBoard() {
		List<Cell> cells = game.getBoard().getTrack(); // Assuming 100 cells

		for (int i = 0; i < 100; i++) {
			CellView cellView = new CellView(cells.get(i));
			Pane cellPane = trackPanes.get(i);
			cellPane.getChildren().clear();
			cellPane.getChildren().add(cellView);
		}
	}

}
