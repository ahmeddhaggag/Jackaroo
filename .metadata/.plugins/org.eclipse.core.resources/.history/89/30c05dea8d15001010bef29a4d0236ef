package engine.board;
import java.util.*;
import engine.GameManager;
import model.Colour;

import java.util.ArrayList;
import java.util.Random;

import engine.GameManager;
import model.Colour;

public class Board implements BoardManager {
	private final GameManager gameManager;
	private final ArrayList<Cell> track;
	private final ArrayList<SafeZone> safeZones;
	private int splitDistance;


	public Board(ArrayList<Colour> colourOrder, GameManager gameManager){
		this.gameManager = gameManager;
		this.track = new ArrayList<Cell>(100);
		this.safeZones = new ArrayList<SafeZone>(4);
		for(int i =0; i<100; i++){
			if( i==0 || i == 25 || i== 50 || i == 75){
				track.add(new Cell(CellType.BASE));
			}else if( i == 23 || i == 48 || i == 73 || i == 98){
				track.add(new Cell(CellType.ENTRY));
			}else {
				track.add(new Cell(CellType.NORMAL));
			}
		}
		splitDistance = 3;
		safeZones.add(new SafeZone(colourOrder.get(0)));
		safeZones.add(new SafeZone(colourOrder.get(1)));
		safeZones.add(new SafeZone(colourOrder.get(2)));
		safeZones.add(new SafeZone(colourOrder.get(3)));
		for(int i =0; i<8; i++){
			assignTrapCell();
		}

	}


	private void assignTrapCell(){
		Random rand = new Random();
		int index = -1;

		while(true){
			index = rand.nextInt(99) + 1;
			if(!track.get(index).isTrap()){
				track.get(index).setTrap(true);
				break;
			}

		}

	}
	public int getSplitDistance() {
		return splitDistance;
	}
	public void setSplitDistance(int splitDistance) {
		this.splitDistance = splitDistance;
	}
	public ArrayList<Cell> getTrack() {
		return track;
	}
	public ArrayList<SafeZone> getSafeZones() {
		return safeZones;
	}
}
