package engine;
import java.io.IOException;
import engine.board.Board;
import engine.board.BoardManager;

import java.util.*;
import model.card.*;
import model.player.CPU;
import model.player.Player;
import model.Colour;

public class Game implements GameManager{
	private final Board board;
	private final ArrayList<Player> players = new ArrayList<Player>();
	private final ArrayList<Card> firePit = new ArrayList<Card>();
	private int currentPlayerIndex;
	private int turn;
	public Game(String playerName) throws IOException{
		ArrayList<Colour> colourOrder=new ArrayList<>();
		colourOrder.add(Colour.RED);
		colourOrder.add(Colour.BLUE);
		colourOrder.add(Colour.GREEN);
		colourOrder.add(Colour.YELLOW);
		Collections.shuffle(colourOrder);
		this.board=new Board(colourOrder,(GameManager)this);
		Deck.loadCardPool((BoardManager)this.board,(GameManager)this);
		
		players.add(new Player(playerName,colourOrder.get(0)));
		for(int i=1;i<=3;i++)
		{
			String name="CPU "+i;
			players.add(new CPU(name,colourOrder.get(i),(BoardManager)this.board));
		}
		for(int i =0; i<4; i++){
			players.get(i).setHand(Deck.drawCards());
		}
		
		this.currentPlayerIndex=0;
		this.turn=0;
		 

	}
	
	public ArrayList<Player> getPlayers(){
		return players;
	}
	
	public Board getBoard() {
		return board;
	}
	public ArrayList<Card> getFirePit() {
		return firePit;
	}
	

}

