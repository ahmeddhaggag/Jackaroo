<?xml version="1.0" encoding="UTF-8"?><testrun name="test" project="JackarooGame" tests="596" started="596" failures="61" errors="0" ignored="0">
  <testsuite name="test.Milestone1PublicTests" time="0.314">
    <testcase name="testBoardInstanceVariablehSafeZonesOfTypeArrayListOfSafeZone" classname="test.Milestone1PublicTests" time="0.008"/>
    <testcase name="testCardFileInDeckOfType" classname="test.Milestone1PublicTests" time="0.009"/>
    <testcase name="testBurnerCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.011"/>
    <testcase name="testConstructorWild" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorSplitOutOfRangeException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardInstanceVariableNameIsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testClassIsAbstractGameException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableTrackIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesGetterLogic" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorIllegalSwapException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableTurnNOGetter" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testInvalidMarbleExceptionConstructorInitializationCheck" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassFiveExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCurrentPlayerIndexInGameType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGetterForInstanceVariableSuitDoesNotExistInWeaponSubClasses" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableBoardNoSetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testIllegalMovementExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableBoardIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testAssignTrapExistanceInClassBoard" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorInvalidCardException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableFirePitIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableFirePitPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTrapInCellSetterLogic2" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorCannotDiscardException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCellTypeEnumValues" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testKingCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testGetterLogicForDescriptionInClassStandard" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testBoardInstanceVariableTrackGetterLogic" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testConstructorSevenExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testColourEnumValues" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardConstructorInitializationSplittingDisctanceCorrect" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testInvalidCardExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testDrawCardsInDeckShufflesCards" classname="test.Milestone1PublicTests" time="0.007"/>
    <testcase name="testCellInstanceVariableCellTypeIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableNameGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testDrawCardsInDeckReturnsFourCards" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testMarbleConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testMarbleInstanceVariableColourIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardsPoolInDeckOfType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardsFileInDeckIsStatic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneConstructorInitializationColour" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableFirePitGetterLogic" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testBoardInstanceVariableSplitDistanceOfTypeInt" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableColourNoSetter" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorJackExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorSaver" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSaverCardExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationFirePit" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testGameClassImplementsGameManagerInterface" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableHandGetterExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardInstanceVariableNameisFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassIsSubclassGameException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testLoadCardPoolInDeckisStatic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariablePlayersIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorCannotFieldException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardInstanceVariableSuitiFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testColourValues" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingStandardCards1Rank" classname="test.Milestone1PublicTests" time="0.011"/>
    <testcase name="testTestingfiveIsSubClassOfStandrad" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testEmptyConstructorIllegalDestroyException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableCellsNoSetter" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableMarblesGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testQueenCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.004"/>
    <testcase name="testGameInstanceVariableTurnIsPrivate" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testEmptyConstructorActionException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSetterForInstanceVariableRankDoesNotExistInAnyClass" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableColourGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCannotDiscardExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardInstanceVariableDescriptionisFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSaverIsSubClassOfWild" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorAceExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testTrapInCellSetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testWildCardIsAnAbstractClass" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableCellsIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCellInstanceVariableTrapIsPrivate" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGetterLogicForSuiteInClassStandard" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testFiveCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testClassIsSubclassActionException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorBurner" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneConstructorInitializationCells" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCellTypeInCellSetterExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testEmptyConstructorSplitOutOfRangeException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testMarbleInstanceVariableColourIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableCurrentPlayerIndexNoSetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardConstructorInitializationGameManagerCorrect" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testLoadCardPoolInDeckThrowsIOException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableBoardIsPrivate" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testPlayerInstanceVariableColourSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationPlayersColours" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testBoardInstanceVariableSafeZonesSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerConstructorInitializationSelectedMarblesCorrect" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testAssignTrapIsPrivateInClassBoard" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameConstructorInitializationPlayersNames" classname="test.Milestone1PublicTests" time="0.006"/>
    <testcase name="testPlayerInstanceVariableSelectedCardOfTypeCard" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableCurrentPlayerIndexIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableTrackSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.004"/>
    <testcase name="testCardsPoolInDeckGetterIsAbsent" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testCellConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardInstanceVariablBoardManagerIsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameConstructorInitializationHandPlayers" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testTenCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorKingExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingMixCards" classname="test.Milestone1PublicTests" time="0.015"/>
    <testcase name="testEmptyConstructorCannotDiscardException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorStandardExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCPUInstanceVariableBoardManagerIsPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableCellsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableSelectedCardSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableSplitDistanceSetterLogic" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testGameManagerIsAnInterface" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testIllegalSwapExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testDescriptionGetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableSplitDistanceGetterLogic" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testClassIsSubclassIllegalSwapException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGetterLogicForNameInClassStandard" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testBoardInstanceVariableSplitDistanceGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testStandardCardRankModifiers1" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testBoardClassExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationBoardMangers" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesGetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesIsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testEmptyConstructorIllegalMovementException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesIsPrivate" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassIsSubclassIllegalMovementException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableColourIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTestingsevenIsSubClassOfStandrad" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingMixCards2" classname="test.Milestone1PublicTests" time="0.021"/>
    <testcase name="testSetterForInstanceVariableNameDoesNotExistInAnyClass" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableColourIsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testClassIsSubclassInvalidCardException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorGameException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerConstructorInitializationMarblesCorrect" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testNameCardsLoadCardPoolInDeckReadingCSVLoadingWildCards" classname="test.Milestone1PublicTests" time="0.007"/>
    <testcase name="testClassBurnerExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testRankGetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCPUConstructorExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSafeZoneInstanceVariableColourIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardsFileInDeckIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardsPoolInDeckIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableBoardGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardConstructorInitializationTrackCorrect" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testClassTenExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableNameSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testStandardCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableGameManagerOfTypeGameManager" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCellInstanceVariableCellTypeGetterLogic" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testEmptyConstructorGameException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCPUInstanceVariableBoardManagerIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCodeCardsLoadCardPoolInDeckReadingCSVLoadingWildCards" classname="test.Milestone1PublicTests" time="0.005"/>
    <testcase name="testCardDescriptionModifiers4" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testDrawCardsInDeckisStatic" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCellInstanceVariableMarbleGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testgetSplitDistanceInBoardManagerInterface" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCannotDiscardExceptionConstructorInitializationCheck" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSafeZoneInstanceVariableColourGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testMarbleInCellSetterLogic" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTypeOfMarbleInCell" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableCurrentPlayerIndexNOGetter" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testGameInstanceVariableTurnPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableFirePitIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariablePlayersGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassIsSubclassCannotFieldException" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testIsCardAnAbstractClass" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariablehHandOfTypeArrayListOfCard" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardsFileInDeckExistance" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTestingJackIsSubClassOfStandrad" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariablehTrackOfTypeArrayListOfCell" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariablePlayersPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCannotFieldExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableSelectedCardGetterLogic" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testCPUConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableNameIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSplitOutOfRangeExceptionConstructorInitializationCheck" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTrapInCellGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardManagerModifier" classname="test.Milestone1PublicTests" time="0.005"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesOfTypeArrayList" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameInstanceVariableFirePitNoSetter" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testMarbleInCellSetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationTurn" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardConstructorInitializationSafeZonesCorrect" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerConstructorInitializationHandCorrect" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableMarblesOfTypeArrayListOfMarbles" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInGameType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariablePlayersGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassCardExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testColourInMarbleType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSafeZoneInstanceVariableCellsGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingStandardCards1" classname="test.Milestone1PublicTests" time="0.005"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingStandardCards2" classname="test.Milestone1PublicTests" time="0.006"/>
    <testcase name="testPlayerInstanceVariableNameIsPrivate" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testColourInSafeZoneType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testInvalidMarbleExceptionConstructorInitialization" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCellConstructorExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableSafeZonesIsPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableSafeZonesIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableGameManagerGetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassJackExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCellTypeIsEnum" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTestingQueenIsSubClassOfStandrad" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorfourExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableHandIsPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableHandIsPrivate" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardInstanceVariablRankIsPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableGameManagerIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testEmptyConstructorInvalidCardException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBurnerIsSubClassOfWild" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testMarbleInstanceVariableColourGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesIsFinal" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testFrequencyCardsLoadCardPoolInDeckReadingCSVLoadingWildCards" classname="test.Milestone1PublicTests" time="0.007"/>
    <testcase name="testCellInstanceVariableMarbleGetterExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariableCurrentPlayerIndexPresent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableSplitDistanceSetterExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCardsPoolInDeckIsStatic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testMarbleInstanceVariableColourGetterExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testGameInstanceVariablePlayersNoSetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerConstructorInitialization" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testConstructorActionException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCellInstanceVariableTrapPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testMarbleInstanceVariableColourNoSetter" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardsFileInDeckValue" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testFirePitInGameType" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTypeOfCellTypeInCell" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testClassAceExists" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardImplementsBoardManager" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCPUSubToPlayer" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSuitGetter" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableSafeZonesGetterExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableRankDoesNotExistInWeaponSubClasses" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSuitIsEnum" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableHandSetterLogic" classname="test.Milestone1PublicTests" time="0.003"/>
    <testcase name="testSevenCardConstructorInitialization" classname="test.Milestone1PublicTests" time="0.002"/>
    <testcase name="testCardFileInDeckGetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableTrackIsPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableTrackIsPrivate" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableNameDoesNotExistInWeaponSubClasses" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableHandGetterLogic" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassIsAbstractInvalidSelectionException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testDrawCardsInDeckRemovedCardsCards" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testIllegalDestroyExceptionConstructorInitializationCheck" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testWildCardExists" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableColourGetterLogicCase1" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testTestingStandardIsSubClassOfCard" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testIllegalSwapExceptionConstructorInitializationCheck" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCellInstanceVariableMarbleIsPrivate" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationGameMangers" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testCardsPoolInDeckSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testConstructorIllegalDestroyException" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableColourPresent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testCPUInstanceVariableBoardManagerSetterIsAbsent" classname="test.Milestone1PublicTests" time="0.0"/>
    <testcase name="testSafeZoneInstanceVariableCellsIsFinal" classname="test.Milestone1PublicTests" time="0.001"/>
    <testcase name="testClassKingExists" classname="test.Milestone1PublicTests" time="0.001"/>
  </testsuite>
  <testsuite name="test.Milestone2PublicTests" time="0.355">
    <testcase name="testValidateSwapMethodOtherMarble1InBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateSwapMethodOtherMarbleInBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testValidateStepsMethodOnTrackEnterSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInSevenClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testGetSafeZoneIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetNextPlayerColourInGameDeclaration" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInQueenClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testCanPlayTurnGameFalse" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSelectCardMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActLogicInJackClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateStepsMethodMarbleNotInSafeZoneNotOnTrackExceptionBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testFieldMarbleExceptionThrown" classname="test.Milestone2PublicTests" time="0.005">
      <failure>java.lang.AssertionError: fieldMarble should throw only a CannotFieldException if the player's marble collection is empty.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testFieldMarbleExceptionThrown(Milestone2PublicTests.java:1208)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCheckWinGame" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSendToSafeFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleColourMethodInFiveClassLogic" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testEndPlayerTurnGameNewRound" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testSwapExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateStepsMethodOtherPlayerMarbleReturnBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetPositionInPathMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidatePathCase5InBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateFieldingInBoardDeclaration" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testActMethodInClassJackDoesntDestroysMarblesInPath" classname="test.Milestone2PublicTests" time="0.006">
      <failure>java.lang.AssertionError: nullexception.IllegalMovementException: Cannot bypass any marble stationed in its base cell occured while accessing method act in class Jack&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassJackDoesntDestroysMarblesInPath(Milestone2PublicTests.java:13687)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSendToBaseBoardOccupiedCellSameColour" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testIsFullIsPublicInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetEntryPositionMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testEndPlayerTurnGameNewTurn" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testSelectMarbleMethodInPlayerClassLogicMarbleAlreadyExists" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Selecting an already selected marble should not modify the selection expected:&lt;[model.player.Marble@673f229f]&gt; but was:&lt;[model.player.Marble@673f229f, model.player.Marble@673f229f]&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testSelectMarbleMethodInPlayerClassLogicMarbleAlreadyExists(Milestone2PublicTests.java:10790)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testRefillPoolLogicInSafeDeckClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testMoveByExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizePresentInTenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPoolSizeIsPublicInSafeDeckClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetOneMarbleInPlayerDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCase4InBoardClass" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: The given path is invalid because it contains a cell with a marble in the safe zone entry; therefore,an IllegalMovementException is expected to be thrown, but it is not.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCase4InBoardClass(Milestone2PublicTests.java:316)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveBoardDestroyTarget" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Expected IllegalDestroyException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testMoveBoardDestroyTarget(Milestone2PublicTests.java:8052)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectCardMethodInGameClassLogic" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The card is not selected expected:&lt;model.card.standard.Standard@74460322&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testSelectCardMethodInGameClassLogic(Milestone2PublicTests.java:10671)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsMethodTooHighRankOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizePresentInCardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardColourInGame" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testActMethodInClassKingDoesntDestroysMarblesNOTInPath" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testCanPlayTurnGameTrue" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizeAbsentInStandardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateStepsMethodTooHighRankInSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetSafeZoneMethodRightColourInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testDiscardCardWithoutArgsExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetActivePlayerColourExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInWildClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidatePathRemovingConditionFromCase2InBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidatePathCase3InBoardClass" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: The given path is invalid because it contains a cell with a marble belonging to the active player; therefore,an IllegalMovementException is expected to be thrown, but it is not.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCase3InBoardClass(Milestone2PublicTests.java:257)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathExcludeTargetInCountingInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizePresentInSevenClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testRefillPoolExistenceInDeckClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActonTenWithEmptyMarbles" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testDestroyMarbleExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testKingActSendToBase" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when calling act on a king card with empty marbles input&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testKingActSendToBase(Milestone2PublicTests.java:916)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDeselectAllMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodInPlayerClassLogicWithEmptyList" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardAce" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Method playPlayerTurn in class Game must call method play expected:&lt;null&gt; but was:&lt;model.player.Marble@ef595a0&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardAce(Milestone2PublicTests.java:14308)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardTen" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Method playPlayerTurn in class Game must call method play expected:&lt;null&gt; but was:&lt;model.player.Marble@7da6657d&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardTen(Milestone2PublicTests.java:14541)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsIsCalledInMethodMoveByInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeAbsentInWildClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassSevenDoesntDestroysMarblesInPathWhenMoving1Marble" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: nullexception.IllegalMovementException: More than one marble in path occured while accessing method act in class Seven&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassSevenDoesntDestroysMarblesInPathWhenMoving1Marble(Milestone2PublicTests.java:13945)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testvalidateFieldingBoardOccupiedCell" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testActMethodInClassAceMovesMarble1Step" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: null occured while accessing method act in class Ace&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassAceMovesMarble1Step(Milestone2PublicTests.java:13497)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeAbsentInSaverClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateSwapMethodBothMarblesNotOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testPlayMethodInClassPlayerWithCardTen" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Method play in class Player must call method act expected:&lt;null&gt; but was:&lt;model.player.Marble@2d5b2a11&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayMethodInClassPlayerWithCardTen(Milestone2PublicTests.java:14117)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerActBurnerSelectedMarbles" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSwapInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInCardClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidatePathCase1InBoardClass" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: The given path is invalid because it contains a safe zone cell that holds a marble; therefore,an IllegalMovementException is expected to be thrown, but it is not.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCase1InBoardClass(Milestone2PublicTests.java:140)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEditSplitDistanceMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testIsFullExistenceInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateStepsMethodOtherPlayerMarbleBoardClass" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Player marble should not enter safezone when moved by another player &#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateStepsMethodOtherPlayerMarbleBoardClass(Milestone2PublicTests.java:3991)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardJackCaseEmptyListMarbleSize" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardJackCaseEmptyListMarbleSize(Milestone2PublicTests.java:12438)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSendToSafeBoardOldLocation" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testActMethodInClassTenMovesMarble10Steps" classname="test.Milestone2PublicTests" time="0.003">
      <failure>java.lang.AssertionError: nullexception.IllegalMovementException: Cannot bypass any marble stationed in its base cell occured while accessing method act in class Ten&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassTenMovesMarble10Steps(Milestone2PublicTests.java:13736)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetPositionInPathMarbleNotOnPathBoardClass" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testValidateMarbleColoursPresentInBurnerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testSelectCardMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testGetPositionInPathUpperBoundryBoardClass" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testPlayMethodInClassPlayerWithCardSeven" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Method play in class Player must call method act expected:&lt;null&gt; but was:&lt;model.player.Marble@1bee5962&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayMethodInClassPlayerWithCardSeven(Milestone2PublicTests.java:14248)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetBasePositionMethodLogicInBoardClass" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testAceActEmptyExceptionThrown" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: Ace's act should throw only a CannotFieldException if the player's marble collection and selected marbles are empty.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testAceActEmptyExceptionThrown(Milestone2PublicTests.java:977)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectMarlbeMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testEndPlayerTurnGameNotClearingFirePit" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidatePathCheckingTheConditionOfDestoryIsFalseInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateSwapMethodActivePlayerMarble2InBaseInBoardClass" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: IllegalSwapExceptionException should not be thrown when active player marble 2 is in base and other player in normal cell&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateSwapMethodActivePlayerMarble2InBaseInBoardClass(Milestone2PublicTests.java:5673)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEditSplitDistanceMethodInGameClassThrowsException" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testValidateStepsMethoReturnsOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSelectMarbleMethodInGameClassThrowsException" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateDestroyNotFailCaseSafeMarble" classname="test.Milestone2PublicTests" time="0.004"/>
    <testcase name="testActTenEmptyRandomTest" classname="test.Milestone2PublicTests" time="0.004"/>
    <testcase name="testGetNextPlayerColourInGame2" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizeInCardClassLogic" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testGetEntryPositionIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetBasePositionMethodNullColourInBoardClass" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleColourMethodInJackClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: The colour of marbles should be different&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testValidateMarbleColourMethodInJackClassLogicWithTwoMarbles(Milestone2PublicTests.java:13065)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActIsPublicInSafeJackClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testActTenEmptyMarblesEmptyHandException" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: CannotDiscardException should be thrown when ten card is acting and the next player has an empty hand!java.lang.IllegalArgumentException: bound must be positive occurred when calling act on a Ten card with empty marbles, and it should NOT&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActTenEmptyMarblesEmptyHandException(Milestone2PublicTests.java:1806)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsIsPrivateInClassBoard" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInSevenClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testDiscardCardInGameRandom" classname="test.Milestone2PublicTests" time="0.003"/>
    <testcase name="testValidateSwapExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateMarbleSizeInAceClassLogicWithOneMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testMoveBoardDestroyTargetTrap" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testSendToSafeNotFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testPlayMethodSelectedCardTenCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardTenCaseMarbleSize(Milestone2PublicTests.java:12355)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActMethodInClassSevenMovesOneMarble7Steps" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: null occured while accessing method act in class Seven&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassSevenMovesOneMarble7Steps(Milestone2PublicTests.java:13787)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testregainMarblePlayer" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when creating calling regainMarble in Player&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testregainMarblePlayer(Milestone2PublicTests.java:779)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActMethodInClassJacknMovesMarble11Steps" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: nullexception.IllegalMovementException: Cannot bypass any marble stationed in its base cell occured while accessing method act in class Jack&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassJacknMovesMarble11Steps(Milestone2PublicTests.java:13643)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSendHomeGameMarbleAddedToPlayer" classname="test.Milestone2PublicTests" time="0.002">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when creating calling regainMarble in Player&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testSendHomeGameMarbleAddedToPlayer(Milestone2PublicTests.java:843)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testFieldMarbleSendToBase" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when calling fieldMarble in Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testFieldMarbleSendToBase(Milestone2PublicTests.java:1155)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInQueenClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.001"/>
    <testcase name="testValidateDestroyNotFailCaseSafeMarble2" classname="test.Milestone2PublicTests" time="0.002"/>
    <testcase name="testEndPlayerTurnGameClearingFirePit" classname="test.Milestone2PublicTests" time="0.008">
      <failure>java.lang.AssertionError: endPlayerTurn method in class game should clear the firepit if the cards pool has fewer than 4 cards to draw. Expected size is:0 but was: 20&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameClearingFirePit(Milestone2PublicTests.java:10429)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testIsFullMethodCaseNotFullInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeAbsentInFiveClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendToBaseBoardOccupiedCell" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: exception.IllegalDestroyException: Marble not on path occured when calling sendToBase in Board&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testSendToBaseBoardOccupiedCell(Milestone2PublicTests.java:1567)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInAceClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingNotFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDeselectAllMethodInPlayerClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInBurnerClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodPresentInGameClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodInGameClassThrowsExceptionSecond" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInJackClassWithOneMarbleFail" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodReturn2SafeZonesCellsInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActSaverNotFailCaseSafeZone" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSendHomeInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInStandardClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetOneMarblePlayer2" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: java.lang.NullPointerException null occurred when calling getOneMarble in Player class &#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testGetOneMarblePlayer2(Milestone2PublicTests.java:1285)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInCardClassLogicFailCaseWithEmptyList" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardAceCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardAceCaseMarbleSize(Milestone2PublicTests.java:12174)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInJackClassLogicWithTwoMarbles" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardInGameException" classname="test.Milestone2PublicTests" time="0.001">
      <failure>java.lang.AssertionError: CannotDiscardException should be thrown when the player of the given colour to dicardCard has an empty hand!java.lang.IllegalArgumentException: bound must be positive occurred when calling discardCard method on a Game object&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testDiscardCardInGameException(Milestone2PublicTests.java:1986)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerActSaver" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Play method in class Player should allow the selected card to act with the selected marbles. expected:&lt;null&gt; but was:&lt;model.player.Marble@1e3bdb74&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerActSaver(Milestone2PublicTests.java:9166)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActMethodInClassSevenMovesTwoMarbles7Steps" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: nullexception.IllegalMovementException: Cannot bypass any marble stationed in its base cell occured while accessing method act in class Seven&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testActMethodInClassSevenMovesTwoMarbles7Steps(Milestone2PublicTests.java:13856)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testFieldMarbleInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameRefillingDeck" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: endPlayerTurn method in class game should refil the Deckâ€™s card pool with the cards in the firepit. Expected size is:5 but was: 0&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameRefillingDeck(Milestone2PublicTests.java:10354)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathCheckingTheLoopStartInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectCardMethodInPlayerClassLogic" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The card is not selected expected:&lt;model.card.standard.Standard@1572a858&gt; but was:&lt;null&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testSelectCardMethodInPlayerClassLogic(Milestone2PublicTests.java:10559)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActBurnerDestroyMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethoBackwardsOnTracknTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassCardIsAbstract" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetPositionInPathMethodExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInJackClassLogicWithTwoMarblesFail" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardKingCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardKingCaseMarbleSize(Milestone2PublicTests.java:12264)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInJackClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInStandardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodMovingOtherPlayerMarbleBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursPresentInFiveClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInKingClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testMoveBoardOldLocation" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDiscardCardColourInGameRandom" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInQueenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingFailCasePositionOnTrackMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testdestroyMarbleBoardSendHome" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method destroyMarble in class Board.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testdestroyMarbleBoardSendHome(Milestone2PublicTests.java:6856)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDeselectAllMethodPresentInPlayerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetNextPlayerColourExistenceInGameManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSwapExistenceInBoardManagerClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapMethodrMarble2NotOnTrackInBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected IllegalSwapException was not thrown, marble2 is not on track&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidateSwapMethodrMarble2NotOnTrackInBoardClass(Milestone2PublicTests.java:5206)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSendToBaseBoardSetMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInKingClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardNullCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameAddingSelectedCardToFirepit" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerTurnGameBurner" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: playPlayerTurn method in class Game should allow allows the current player to play their turn. expected:&lt;null&gt; but was:&lt;model.player.Marble@e8c7bc8&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnGameBurner(Milestone2PublicTests.java:8492)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleColoursAbsentInFourClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testGetEntryPositionMethodNullColourInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSwapCallsValidateSwapInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameNotRefillingHands" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testsendToBaseInBoardDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInQueenClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardStandardCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardStandardCaseMarbleSize(Milestone2PublicTests.java:12707)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testCheckWinNoWinnerGame" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSavingFailCaseSafeZoneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateDestroyFailCasePositionInPath" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardSevenCaseEmptyListMarbleSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardSevenCaseEmptyListMarbleSize(Milestone2PublicTests.java:12523)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardSevenCaseMarbleSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardSevenCaseMarbleSize(Milestone2PublicTests.java:12614)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInTenClassLogicFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEndPlayerTurnGameRefillingHands" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: endPlayerTurn method in class game should refil all playersâ€™ hands from the deck when starting a new round. expected:&lt;true&gt; but was:&lt;false&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testEndPlayerTurnGameRefillingHands(Milestone2PublicTests.java:10138)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSelectCardMethodInPlayerClassThrowsException" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodSelectedCardJackCaseMarbleColour" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardJackCaseMarbleColour(Milestone2PublicTests.java:12910)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodSelectedCardStandardCaseMarbleColour" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayMethodSelectedCardStandardCaseMarbleColour(Milestone2PublicTests.java:12807)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateStepsMethodTooHighRankOnEntryInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerFailInvalidateMarbleColours" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayPlayerFailInvalidateMarbleColours(Milestone2PublicTests.java:8725)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidatePathIsCalledInMethodMoveByInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testIsFullMethodCaseFullInSafeZoneClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursAbsentInAceClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayMethodInClassPlayerWithCardFive" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method play in class Player must call method act expected:&lt;null&gt; but was:&lt;model.player.Marble@4e5fb044&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayMethodInClassPlayerWithCardFive(Milestone2PublicTests.java:14182)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayMethodInClassPlayerWithCardJack" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method play in class Player must call method act expected:&lt;null&gt; but was:&lt;model.player.Marble@28bf9712&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayMethodInClassPlayerWithCardJack(Milestone2PublicTests.java:14050)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleColoursPresentInCardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColoursPresentInJackClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActExistenceInJackClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testSelectMarbleMethodInGameClassLogicWithListofOneMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathRemovingConditionSafeCellFromCase4InBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The path given shouldn't throw any exception but got:  exception.IllegalMovementException: More than one marble in path&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathRemovingConditionSafeCellFromCase4InBoardClass(Milestone2PublicTests.java:654)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetSafeZoneMethodZoneNotFoundInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCheckingOnMarbleColorInsteadActivePlayerColorInBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The path given shouldn't throw any exception but got:  exception.IllegalMovementException: More than one marble in path&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCheckingOnMarbleColorInsteadActivePlayerColorInBoardClass(Milestone2PublicTests.java:426)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testActMethodInClassFiveMovesMarble5Steps" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodOnTrackOneStepIntoSafeZoneInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testActMethodInClassKingDestroysMarblesInPath" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerFailInvalidateMarblesSize" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Expected InvalidMarbleException was not thrown&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.assertTrue(Assert.java:41)&#13;
	at test.Milestone2PublicTests.testPlayPlayerFailInvalidateMarblesSize(Milestone2PublicTests.java:8836)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMoveBoardAssignNewTrapCell" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidatePathCase2_1InBoardClass" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: The given path is invalid because it contains a base cell that holds its corresponding marble; therefore,an IllegalMovementException is expected to be thrown, but it is not.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testValidatePathCase2_1InBoardClass(Milestone2PublicTests.java:204)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testGetOneMarblePlayerEmpty" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when calling getOneMarble for a player of empty marbles collection&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testGetOneMarblePlayerEmpty(Milestone2PublicTests.java:1350)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testValidateMarbleSizeInTenClassLogicWithNoMarble" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleColourMethodInBurnerClassFail" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testEditSplitDistanceMethodInGameClassLogic" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizePresentInAceClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testDestroyMarbleFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateMarbleSizeInJackClassFailCase" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerActSaverSelectedMarbles" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Play method in class Player should allow the selected card to act with the selected marbles not marbles arraylist. expected:&lt;null&gt; but was:&lt;model.player.Marble@e0e991c&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerActSaverSelectedMarbles(Milestone2PublicTests.java:9060)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardFive" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method playPlayerTurn in class Game must call method play expected:&lt;null&gt; but was:&lt;model.player.Marble@6b96a616&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardFive(Milestone2PublicTests.java:14482)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardJack" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method playPlayerTurn in class Game must call method play expected:&lt;null&gt; but was:&lt;model.player.Marble@79d4dcf7&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardJack(Milestone2PublicTests.java:14366)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testEndPlayerTurnGameDeselecting" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateSwapMethodMarblesNoneBasePositonsBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testValidateStepsMethodExistenceInBoardClass" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testPlayPlayerTurnMethodInClassGameWithCardSeven" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: Method playPlayerTurn in class Game must call method play expected:&lt;null&gt; but was:&lt;model.player.Marble@5f5852cb&gt;&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:834)&#13;
	at org.junit.Assert.assertEquals(Assert.java:118)&#13;
	at test.Milestone2PublicTests.testPlayPlayerTurnMethodInClassGameWithCardSeven(Milestone2PublicTests.java:14424)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testDiscardCardColourInGameDeclaration" classname="test.Milestone2PublicTests" time="0.0"/>
    <testcase name="testFieldMarbleRemoveMarble" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: java.lang.NullPointerException occured when calling fieldMarble in Game&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testFieldMarbleRemoveMarble(Milestone2PublicTests.java:1071)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testdestroyMarbleBoardMarblePosition" classname="test.Milestone2PublicTests" time="0.0">
      <failure>java.lang.AssertionError: class java.lang.reflect.InvocationTargetException occurred while accessing method destroyMarble method in class Board.&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at test.Milestone2PublicTests.testdestroyMarbleBoardMarblePosition(Milestone2PublicTests.java:6726)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:298)&#13;
	at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:292)&#13;
	at java.util.concurrent.FutureTask.run(Unknown Source)&#13;
	at java.lang.Thread.run(Unknown Source)&#13;
&#13;
</failure>
    </testcase>
  </testsuite>
  <testsuite name="test.Milestone1PrivateTests" time="0.454">
    <testcase name="testCardInstanceVariablSuitIsPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testLoadCardPoolInDeckisVoid" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testAssignTrapCellAlwaysAddsNewTrap" classname="test.Milestone1PrivateTests" time="0.007"/>
    <testcase name="testCellTypeInCellSetterLogic" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableSafeZonesIsFinal" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassWildExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testConstructorfiveExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCardInstanceVariablDescriptionIsPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testClassQueenExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassStandardExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testInvalidCardExceptionConstructorInitializationCheck" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testTrapInCellSetterExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableTrackOfTypeArrayList" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testNameGetter" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassIsSubclassInvalidSelectionException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableHandOfTypeArrayList" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testStandardCardSuitModifiers2" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesSetterIsAbsent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableSelectedCardIsPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableSelectedCardIsPrivate" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testGameConstructorInitializationCurrentPlayerIndex" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableSplitDistanceIsPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableSplitDistanceIsPrivate" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testAceCardConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCellInstanceVariableTrapGetterLogic" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableGameManagerIsPresent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableGameManagerIsPrivate" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testNameModifier3" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testColourIsEnum" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testConstructorCardExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testBoardConstructorInitializationTrapCellsAreCorrect" classname="test.Milestone1PrivateTests" time="0.054"/>
    <testcase name="testSplitOutOfRangeExceptionConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testConstructorIllegalMovementException" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testGameInstanceVariableTurnIsFinal" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesSetterIsAbsent" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testSizeLoadCardPoolInDeckReadingCSVLoadingWildCards" classname="test.Milestone1PrivateTests" time="0.01"/>
    <testcase name="testEmptyConstructorInvalidMarbleException" classname="test.Milestone1PrivateTests" time="0.013"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesOfTypeArrayListOfMarbles" classname="test.Milestone1PrivateTests" time="0.011"/>
    <testcase name="testLoadCardPoolInDeckisPublic" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testPlayerConstructorInitializationSelectedCardCorrect" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testGameConstructorInitializationMangerForBoard" classname="test.Milestone1PrivateTests" time="0.004"/>
    <testcase name="testDrawCardsInDeckReturn" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testGetterLogicForRankInClassStandard" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableSuitDoesNotExistInAnyClass" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testIllegalDestroyExceptionConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testBoardManagerIsAnInterface" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassIsSubclassSplitOutOfRangeException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableColourIsPrivate" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testBoardInstanceVariableGameManagerSetterIsAbsent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesOfTypeArrayList" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testConstructorQueenExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testCellInstanceVariableMarblePresent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCannotFieldExceptionConstructorInitializationCheck" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testCPUInstanceVariableBoardManagerGetterIsAbsent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testDescriptionCardsLoadCardPoolInDeckReadingCSVLoadingWildCards" classname="test.Milestone1PrivateTests" time="0.006"/>
    <testcase name="testCardsPoolInDeckExistance" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCPUInstanceVariableBoardManagerIsPrivate" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testSuitEnumValues" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testFourCardConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testJackCardConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testPlayerInstanceVariableSelectedCardGetterExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testGameInstanceVariablePlayersIsPrivate" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableColourIsPrivate" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testCardFileInDeckSetterIsAbsent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testGameInstanceVariableBoardPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableNameGetterExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testTestingKingIsSubClassOfStandrad" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testCardInstanceVariableRankisFinal" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassIsSubclassInvalidMarbleException" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableHandSetterExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCellsInSafeZoneType" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testBurnerCardExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testTestingFourIsSubClassOfStandrad" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayersInGameType" classname="test.Milestone1PrivateTests" time="0.036"/>
    <testcase name="testClassIsSubclassIllegalDestroyException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testCardInstanceVariablGameManagerIsPresent" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testPlayerInstanceVariableNameOfTypeString" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testTestingAceIsSubClassOfStandrad" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableSelectedMarblesIsPresent" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testBoardInstanceVariableTrackGetterExists" classname="test.Milestone1PrivateTests" time="0.01"/>
    <testcase name="testWildIsSubClassOfCard" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testAssignTrapCellAlwaysAddsNewTrapSecond" classname="test.Milestone1PrivateTests" time="0.035"/>
    <testcase name="testBoardInstanceVariableSafeZonesOfTypeArrayList" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testGameInstanceVariableFirePitGetterExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testConstructorInvalidSelectionException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testGetterForInstanceVariableDescriptionDoesNotExistInWeaponSubClasses" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testSafeZoneInstanceVariableCellsGetterLogic" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testCellInstanceVariableCellTypePresent" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testLoadCardPoolInDeckReadingCSVLoadingStandardCards3" classname="test.Milestone1PrivateTests" time="0.033"/>
    <testcase name="testGameInstanceVariableTurnNoSetter" classname="test.Milestone1PrivateTests" time="0.007"/>
    <testcase name="testEmptyConstructorIllegalSwapException" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testPlayerInstanceVariableNameIsPresent" classname="test.Milestone1PrivateTests" time="0.005"/>
    <testcase name="testTypeOfTrapInCell" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testGameManagerModifier2" classname="test.Milestone1PrivateTests" time="0.056"/>
    <testcase name="testCPUClassExists" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testGameConstructorExists" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testClassSaverExists" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testGameInstanceVariableCurrentPlayerIndexIsPrivate" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testMarbleInstanceVariableColourPresent" classname="test.Milestone1PrivateTests" time="0.022"/>
    <testcase name="testPlayerInstanceVariableColourOfTypeColour" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testCardsFileInDeckIsPrivate" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testClassIsSubclassCannotDiscardException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassFourExists" classname="test.Milestone1PrivateTests" time="0.003"/>
    <testcase name="testPlayerInstanceVariableColourGetterExists" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testSafeZoneConstructorExists" classname="test.Milestone1PrivateTests" time="0.004"/>
    <testcase name="testBoardInstanceVariableSafeZonesGetterLogic" classname="test.Milestone1PrivateTests" time="0.007"/>
    <testcase name="testBoardConstructorExists" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testConstructorInvalidMarbleException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testPlayerInstanceVariableMarblesIsFinal" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testTestingtenIsSubClassOfStandrad" classname="test.Milestone1PrivateTests" time="0.008"/>
    <testcase name="testPlayerConstructorExists" classname="test.Milestone1PrivateTests" time="0.008"/>
    <testcase name="testIllegalMovementExceptionConstructorInitializationCheck" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testTurnInGameType" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testEmptyConstructorInvalidSelectionException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testMarbleConstructorExists" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testEmptyConstructorCannotFieldException" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testSetterForInstanceVariableDescriptionDoesNotExistInAnyClass" classname="test.Milestone1PrivateTests" time="0.0"/>
    <testcase name="testGameInstanceVariableBoardGetterLogic" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testConstructorTenExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testSaverCardConstructorInitialization" classname="test.Milestone1PrivateTests" time="0.002"/>
    <testcase name="testCellTypeInCellGetterExists" classname="test.Milestone1PrivateTests" time="0.001"/>
    <testcase name="testClassIsAbstractActionException" classname="test.Milestone1PrivateTests" time="0.0"/>
  </testsuite>
</testrun>
